"""update timetable and document models

Revision ID: a64b163fe1c7
Revises: 5e9dad0d78ed
Create Date: 2024-10-25 11:07:32.914317

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a64b163fe1c7'
down_revision = '5e9dad0d78ed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('local_plan_document_type',
    sa.Column('reference', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('reference')
    )
    with op.batch_alter_table('local_plan_document_type', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_local_plan_document_type_end_date'), ['end_date'], unique=False)

    op.create_table('local_plan_event_type',
    sa.Column('reference', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('reference')
    )
    with op.batch_alter_table('local_plan_event_type', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_local_plan_event_type_end_date'), ['end_date'], unique=False)

    op.create_table('local_plan_event',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('event_date', sa.Text(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('local_plan_timetable', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['event_type'], ['local_plan_event_type.reference'], ),
    sa.ForeignKeyConstraint(['local_plan_timetable'], ['local_plan_timetable.reference'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('timetable_event')
    op.drop_table('timetable_event_type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('timetable_event_type',
    sa.Column('reference', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('reference', name='timetable_event_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timetable_event',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('event_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('local_plan_timetable', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_type'], ['timetable_event_type.reference'], name='timetable_event_event_type_fkey'),
    sa.ForeignKeyConstraint(['local_plan_timetable'], ['local_plan_timetable.reference'], name='timetable_event_local_plan_timetable_fkey'),
    sa.PrimaryKeyConstraint('id', name='timetable_event_pkey')
    )
    op.drop_table('local_plan_event')
    with op.batch_alter_table('local_plan_event_type', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_local_plan_event_type_end_date'))

    op.drop_table('local_plan_event_type')
    with op.batch_alter_table('local_plan_document_type', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_local_plan_document_type_end_date'))

    op.drop_table('local_plan_document_type')
    # ### end Alembic commands ###
